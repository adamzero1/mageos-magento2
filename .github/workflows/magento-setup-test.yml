name: magento-setup-warden
run-name: ${{ github.actor }} is running magento setup in warden
on:
  workflow_dispatch: {}
  push:
    branches:
      - feature/magento-setup*

permissions:
  contents: write

jobs:
  magento-setup-warden:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR commit
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: main
          # Need to do this otherwise Nx cant determine diff
          fetch-depth: 0

      # Warden / Den stuff
      #git clone https://github.com/wardenenv/warden.git /workspaces/warden
      - name: Checkout Den Repo
        uses: actions/checkout@v3
        with:
          repository: wardenenv/warden
          path: warden
          ref: 'refs/tags/0.14.1'

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Init / Configure Den
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          rm .env
          ${DEN} svc up
          ${DEN} env-init mageos magento2
          sed -i 's/WARDEN_DB=.*/WARDEN_DB=1/g' .env
          sed -i 's/WARDEN_TEST_DB=.*/WARDEN_TEST_DB=0/g' .env
          sed -i 's/MYSQL_DISTRIBUTION=.*/DB_DISTRIBUTION=mariadb/g' .env
          sed -i 's/MYSQL_DISTRIBUTION_VERSION=.*/DB_DISTRIBUTION_VERSION=10.6/g' .env
          sed -i 's/WARDEN_ELASTICSEARCH=.*/WARDEN_ELASTICSEARCH=1/g' .env
          sed -i 's/WARDEN_OPENSEARCH=.*/WARDEN_OPENSEARCH=0/g' .env
          sed -i 's/WARDEN_ELASTICHQ=.*/WARDEN_ELASTICHQ=0/g' .env
          sed -i 's/COMPOSER_VERSION=.*/COMPOSER_VERSION=2/g' .env
          sed -i 's/WARDEN_VARNISH=.*/WARDEN_VARNISH=1/g' .env
          sed -i 's/WARDEN_RABBITMQ=.*/WARDEN_RABBITMQ=0/g' .env
          sed -i 's/WARDEN_REDIS=.*/WARDEN_REDIS=1/g' .env
          sed -i 's/PHP_VERSION=.*/PHP_VERSION=8.2/g' .env
          cat .env
          ${DEN} env up
          echo ${{secrets.DEPLOY_PASSWORD}} | sudo -S chmod -R a+rw .

      - name: composer install run
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm \
            wget https://getcomposer.org/composer-stable.phar -O composer.phar
            php composer.phar -v
            php composer.phar install --no-interaction --no-progress --no-suggest --no-scripts --prefer-dist

      - name: Install Magento
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm bin/magento setup:install \
            --backend-frontname=admin \
            --db-host=db \
            --db-name=magento \
            --db-user=magento \
            --db-password=magento \
            --http-cache-hosts=varnish:80 \
            --session-save=redis \
            --session-save-redis-host=redis \
            --session-save-redis-port=6379 \
            --session-save-redis-db=2 \
            --cache-backend=redis \
            --cache-backend-redis-server=redis \
            --cache-backend-redis-db=0 \
            --cache-backend-redis-port=6379 \
            --page-cache=redis \
            --page-cache-redis-server=redis \
            --page-cache-redis-db=1 \
            --page-cache-redis-port=6379 \
            --search-engine=elasticsearch7 \
            --elasticsearch-host=elasticsearch \
            --elasticsearch-port=9200 \
            --elasticsearch-enable-auth=0 \
            --elasticsearch-index-prefix=magento2

# # https://github.com/magento/magento2/issues/37236 - unable to install magento with es 8 :(

      - name: Create Admin User
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm \
            php bin/magento admin:user:create \
              --admin-user='admin' \
              --admin-password='abcABC123' \
              --admin-email='user-email-dummy@mage-os-awesome.com' \
              --admin-firstname='Admin' \
              --admin-lastname='User' \

      - name: Set All Magento Configs
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm bin/magento config:set --lock-env web/secure/use_in_adminhtml 1
          ${DEN} env exec -T php-fpm bin/magento config:set --lock-env web/secure/use_in_frontend 1
          ${DEN} env exec -T php-fpm bin/magento config:set --lock-env web/secure/use_in_frontend 1
#               We do not need outside container availability - yet
#          ${DEN} env exec -T php-fpm bin/magento config:set --lock-env web/unsecure/base_url https://adamzero1-vigilant-space-fortnight-gj4grxvv5hwv4v-80.preview.app.github.dev/
#          ${DEN} env exec -T php-fpm bin/magento config:set --lock-env web/secure/base_url https://adamzero1-vigilant-space-fortnight-gj4grxvv5hwv4v-80.preview.app.github.dev/
          ${DEN} env exec -T php-fpm bin/magento config:set cms/wysiwyg/enabled disabled
          ${DEN} env exec -T php-fpm bin/magento config:set admin/security/admin_account_sharing 1
          ${DEN} env exec -T php-fpm bin/magento config:set admin/security/use_form_key 0
          ${DEN} env exec -T php-fpm bin/magento config:set web/seo/use_rewrites 1
          ${DEN} env exec -T php-fpm bin/magento config:set twofactorauth/general/enable 0

      - name: Run Magento Setup Upgrade
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm bin/magento cache:flush
          ${DEN} env exec -T php-fpm bin/magento setup:upgrade
          ${DEN} env exec -T php-fpm bin/magento setup:db:status

      - name: Set to production mode
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm bin/magento deploy:mode:set production

      - name: Run Magento Re-indexation
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm bin/magento indexer:reindex

      - name: Run PHP BIN/MAGENTO
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          ${DEN} env exec -T php-fpm php bin/magento
