name: Test
run-name: ${{ github.actor }} is running magento setup in warden
on:
  workflow_dispatch: {}
  pull_request:
    branches:
      - 2.4-develop
      - nx-work-integration-tests

permissions:
  contents: write

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR commit
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: main
          # Need to do this otherwise Nx cant determine diff
          fetch-depth: 0

      # Warden / Den stuff
      #git clone https://github.com/wardenenv/warden.git /workspaces/warden
      - name: Checkout Den Repo
        uses: actions/checkout@v3
        with:
          repository: wardenenv/warden
          path: warden

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Init / Configure Den
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          rm .env
          ${DEN} env-init mageos magento2
          sed -i 's/WARDEN_DB=.*/WARDEN_DB=1/g' .env
          sed -i 's/WARDEN_TEST_DB=.*/WARDEN_TEST_DB=0/g' .env
          sed -i 's/MYSQL_DISTRIBUTION=.*/MYSQL_DISTRIBUTION=0/g' .env
          sed -i 's/MYSQL_DISTRIBUTION_VERSION=.*/MYSQL_DISTRIBUTION_VERSION=10.6/g' .env
          sed -i 's/WARDEN_ELASTICSEARCH=.*/WARDEN_ELASTICSEARCH=1/g' .env
          sed -i 's/WARDEN_OPENSEARCH=.*/WARDEN_OPENSEARCH=0/g' .env
          sed -i 's/WARDEN_ELASTICHQ=.*/WARDEN_ELASTICHQ=0/g' .env
          sed -i 's/WARDEN_VARNISH=.*/WARDEN_VARNISH=1/g' .env
          sed -i 's/WARDEN_RABBITMQ=.*/WARDEN_RABBITMQ=0/g' .env
          sed -i 's/WARDEN_REDIS=.*/WARDEN_REDIS=1/g' .env
          sed -i 's/PHP_VERSION=.*/PHP_VERSION=8.2/g' .env
          ${DEN} env up
          echo ${{secrets.DEPLOY_PASSWORD}} | sudo -S chmod -R a+rw .
      - name: Configure PHPUnit
        working-directory: ./main
        run: |
          cp dev/tests/unit/phpunit.xml.dist dev/tests/unit/phpunit.xml
          sed -i '/<extensions>/,/<\/extensions>/d' dev/tests/unit/phpunit.xml
      # /workspaces/warden/bin/warden env exec -T php-fpm whoami
      - name: Run PHPUnit Nx
        working-directory: ./main
        run: |
          export DEN=/home/runner/work/mageos-magento2/mageos-magento2/warden/bin/warden
          nx affected --target=test:unit --head=HEAD --base=remotes/origin/${{ github.event.pull_request.base.ref }}
          cp nginx.conf.sample nginx.conf
          sed -i '0,/^# PHP entry point for setup application$/d' nginx.conf
          sed -i 's/ fastcgi_backend;/ $fastcgi_backend;/g' nginx.conf
          line=$(($(grep -n '# PHP entry point for main application' nginx.conf | cut -f1 -d:)-1));

          echo $line;
          head -n $line nginx.conf > nginx.conf.tmp

          tee -a nginx.conf.tmp << END
          location ~* ^/dev/tests/acceptance/utils($|/) {
            root \$MAGE_ROOT;
            location ~ ^/dev/tests/acceptance/utils/command.php {
                fastcgi_pass   fastcgi_backend;
                fastcgi_index  index.php;
                fastcgi_param  SCRIPT_FILENAME  \$document_root\$fastcgi_script_name;
                include        fastcgi_params;
            }
          }
          END

          tail -n +$line nginx.conf >> nginx.conf.tmp
          mv nginx.conf.tmp nginx.conf


#https://docs.warden.dev/environments/customizing.html


# bin/magento setup:install \
#   --backend-frontname=admin \
#   --db-host=db \
#   --db-name=magento \
#   --db-user=magento \
#   --db-password=magento \
#   --http-cache-hosts=varnish:80 \
#   --session-save=redis \
#   --session-save-redis-host=redis \
#   --session-save-redis-port=6379 \
#   --session-save-redis-db=2 \
#   --cache-backend=redis \
#   --cache-backend-redis-server=redis \
#   --cache-backend-redis-db=0 \
#   --cache-backend-redis-port=6379 \
#   --page-cache=redis \
#   --page-cache-redis-server=redis \
#   --page-cache-redis-db=1 \
#   --page-cache-redis-port=6379 \
#   --search-engine=elasticsearch7 \
#   --elasticsearch-host=elasticsearch \
#   --elasticsearch-port=9200 \
#   --elasticsearch-enable-auth=0 \
#   --elasticsearch-index-prefix=magento2

# # https://github.com/magento/magento2/issues/37236 - unable to install magento with es 8 :(

# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento admin:user:create \
#   --admin-password="password123" \
#   --admin-user="admin" \
#   --admin-firstname="Local" \
#   --admin-lastname="Admin" \
#   --admin-email="admin@example.com"

# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set --lock-env web/unsecure/base_url https://adamzero1-vigilant-space-fortnight-gj4grxvv5hwv4v-80.preview.app.github.dev/
# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set --lock-env web/secure/base_url https://adamzero1-vigilant-space-fortnight-gj4grxvv5hwv4v-80.preview.app.github.dev/
# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set cms/wysiwyg/enabled disabled

# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set admin/security/admin_account_sharing 1
# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set admin/security/use_form_key 0

# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set web/seo/use_rewrites 1


# # The "twofactorauth/general/force_providers" path doesn't exist. Verify and try again.
# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set twofactorauth/general/force_providers google
# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento config:set twofactorauth/google/otp_window 60


# /workspaces/warden/bin/warden env exec -T php-fpm bin/magento cache:flush
